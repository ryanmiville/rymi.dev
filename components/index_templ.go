// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/gofiber/fiber/v2"

func Home(c *fiber.Ctx) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div class=\"text-slate-400 sm:mt-10 lg:mt-40\"><p class=\"font-mono font-semibold text-2xl\">")
			if err != nil {
				return err
			}
			var_3 := `Hi, I&apos;m`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><h1 class=\"text-7xl bg-clip-text text-transparent bg-gradient-to-r from-purple-400 via-orange-200 to-orange-200 font-bold\">")
			if err != nil {
				return err
			}
			var_4 := `Ryan Miville`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1><p class=\"py-4 text-4xl font-semibold\">")
			if err != nil {
				return err
			}
			var_5 := `Backend Web Developer and Data Engineer`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p class=\"max-w-prose\">")
			if err != nil {
				return err
			}
			var_6 := `I build high-performance data pipelines and web services.`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p class=\"font-mono text-2xl mt-32 text-center\"><span class=\"text-4xl\">")
			if err != nil {
				return err
			}
			var_7 := `ðŸš§`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span>")
			if err != nil {
				return err
			}
			var_8 := `SITE UNDER CONSTRUCTION `
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<span class=\"text-4xl\">")
			if err != nil {
				return err
			}
			var_9 := `ðŸš§`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></p></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = Base(c).Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
